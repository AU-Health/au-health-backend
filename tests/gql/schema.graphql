# Implement the DateTime<Utc> scalar
#
# The input/output is a string in RFC3339 format.
scalar DateTime

# Input from GQL, consume with login_user() to get a User.
input LoginUser {
  email: String!
  password: String!
}

type Mutation {
  # Logs a user in. Sets cookie on their client.
  login(
    # Login User credentials
    loginUser: LoginUser!
  ): User!

  # Registers a new user. Sets a cookie on their client, as if they logged in.
  register(
    # New User information
    newUser: NewUser!
  ): User!
  logout: Boolean!
}

# Input from GQL
input NewUser {
  email: String!
  password: String!
}

# Root for all GraphQL Queries.
type Query {
  # Checks for the currently logged in user by parsing the cookie.
  me: User
  healthCheck: Boolean!
}

scalar UUID

# User with all fields attached. Returned from DB.
type User {
  id: UUID!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}
